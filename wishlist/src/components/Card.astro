---
interface Props {
  item: any;
}

const { item } = Astro.props;

// Ruta de imagen que respeta GitHub Pages (usa public/assets)
const imgSrc =
  typeof item.image === "string" && /^https?:\/\//i.test(item.image)
    ? item.image
    : import.meta.env.BASE_URL +
      "assets/" +
      String(item.image || "").replace(/^\/+/, "");

// Precio con 2 decimales
function formatPrice(value: unknown): string {
  const num =
    typeof value === "number"
      ? value
      : parseFloat(String(value).replace(",", "."));
  return Number.isFinite(num) ? num.toFixed(2) : String(value);
}
const priceText = formatPrice(item.price);

// Para data-attributes
const dataTags = Array.isArray(item.tags) ? item.tags.join(",") : "";
---

<article
  class="card"
  data-title={String(item.title || "").toLowerCase()}
  data-tags={dataTags.toLowerCase()}
  data-price={String(item.price)}
>
  <a class="card-link" href={item.url} target="_blank" rel="noopener">
    <div class="image-wrapper">
      <img src={imgSrc} alt={item.title} loading="lazy" />
      <div class="accent-bar"></div>
    </div>
    <div class="card-content">
      <h3>{item.title}</h3>
      <p class="price">{priceText}€</p>
    </div>
  </a>

  {
    Array.isArray(item.tags) && item.tags.length > 0 && (
      <div class="tag-row">
        {(item.tags as string[]).map((t: string) => (
          <button type="button" class="chip" data-tag={t}>
            {t}
          </button>
        ))}
      </div>
    )
  }
</article>

<style>
  .card {
    border: 1px solid var(--border);
    border-radius: 18px;
    overflow: hidden;
    background: var(--card);
    transition:
      transform 0.25s cubic-bezier(0.4, 0, 0.2, 1),
      box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1),
      border-color 0.25s ease,
      opacity 0.4s ease;
    box-shadow:
      0 4px 12px rgba(0, 0, 0, 0.25),
      0 2px 6px rgba(0, 0, 0, 0.35);

    /* Estado inicial: invisible */
    opacity: 0;
    transform: translateY(30px);
  }

  /* Clase que se añade cuando la card es visible */
  .card.visible {
    opacity: 1;
    transform: translateY(0);
  }

  @media (prefers-color-scheme: dark) {
    .card {
      background: color-mix(in oklab, var(--card), #fff 12%);
      border-color: color-mix(in oklab, var(--border), #fff 35%);
      box-shadow:
        0 4px 16px rgba(0, 0, 0, 0.45),
        0 2px 8px rgba(0, 0, 0, 0.35),
        inset 0 1px 0 rgba(255, 255, 255, 0.05);
    }
  }

  html[data-theme="dark"] .card {
    background: color-mix(in oklab, var(--card), #fff 12%);
    border-color: color-mix(in oklab, var(--border), #fff 35%);
    box-shadow:
      0 4px 16px rgba(0, 0, 0, 0.45),
      0 2px 8px rgba(0, 0, 0, 0.35),
      inset 0 1px 0 rgba(255, 255, 255, 0.05);
  }

  .card:hover {
    transform: translateY(-4px);
    box-shadow:
      0 16px 32px rgba(0, 0, 0, 0.35),
      0 8px 16px rgba(0, 0, 0, 0.25);
    border-color: color-mix(in oklab, var(--border), var(--accent) 30%);
  }

  .image-wrapper {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .card img {
    width: 100%;
    height: auto;
    display: block;
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .card:hover img {
    transform: scale(1.02);
  }

  .accent-bar {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #d4a574 0%, #e8bc8a 50%, #d4a574 100%);
    box-shadow: 0 -2px 6px rgba(212, 165, 116, 0.4);
  }

  .card-content {
    padding: 14px 16px 12px;
  }

  .card a,
  .card a:visited,
  .card a:hover,
  .card a:active {
    color: inherit;
    text-decoration: none;
  }

  .card h3 {
    margin: 0 0 8px;
    font-size: 15.5px;
    font-weight: 600;
    color: var(--text);
    line-height: 1.4;
  }

  .card .price {
    margin: 0;
    font-size: 13.5px;
    font-weight: 500;
    color: var(--muted);
  }

  .card-link {
    display: block;
  }

  .card-link:focus-visible {
    outline: 2px solid var(--accent);
    outline-offset: 4px;
    border-radius: 16px;
  }

  .tag-row {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    padding: 0 16px 16px;
  }

  .chip {
    --chip-bg: color-mix(in oklab, var(--card), var(--text) 8%);
    --chip-border: color-mix(in oklab, var(--border), var(--text) 12%);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid var(--chip-border);
    background: var(--chip-bg);
    color: var(--text);
    padding: 6px 13px;
    border-radius: 9999px;
    font-size: 11.5px;
    font-weight: 500;
    line-height: 1;
    cursor: pointer;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    transition:
      transform 0.15s ease,
      box-shadow 0.15s ease,
      background 0.2s ease,
      border-color 0.2s ease;
  }

  .chip:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.12);
    background: color-mix(in oklab, var(--chip-bg), var(--accent) 10%);
    border-color: color-mix(in oklab, var(--chip-border), var(--accent) 30%);
  }

  .chip:focus-visible {
    outline: 2px solid var(--accent);
    outline-offset: 2px;
  }

  .chip.active {
    background: var(--accent);
    border-color: color-mix(in oklab, var(--accent), #000 20%);
    color: #0b1220;
    box-shadow: 0 2px 8px rgba(138, 180, 255, 0.3);
  }

  @media (prefers-color-scheme: light) {
    .accent-bar {
      background: linear-gradient(90deg, #d4b896 0%, #c9a67a 50%, #d4b896 100%);
    }
    .card {
      box-shadow:
        0 1px 3px rgba(0, 0, 0, 0.05),
        0 1px 2px rgba(0, 0, 0, 0.08);
    }
    .card:hover {
      box-shadow:
        0 8px 16px rgba(0, 0, 0, 0.08),
        0 4px 8px rgba(0, 0, 0, 0.06);
    }
  }

  html[data-theme="light"] .accent-bar {
    background: linear-gradient(90deg, #d4b896 0%, #c9a67a 50%, #d4b896 100%);
  }

  html[data-theme="light"] .card {
    box-shadow:
      0 1px 3px rgba(0, 0, 0, 0.05),
      0 1px 2px rgba(0, 0, 0, 0.08);
  }

  html[data-theme="light"] .card:hover {
    box-shadow:
      0 8px 16px rgba(0, 0, 0, 0.08),
      0 4px 8px rgba(0, 0, 0, 0.06);
  }
</style>
