---
const { item } = Astro.props;

// Ruta de imagen que respeta GitHub Pages (usa public/assets)
const imgSrc =
  typeof item.image === "string" && /^https?:\/\//i.test(item.image)
    ? item.image
    : import.meta.env.BASE_URL +
      "assets/" +
      String(item.image || "").replace(/^\/+/, "");

// Precio con 2 decimales
function formatPrice(value: unknown): string {
  const num =
    typeof value === "number"
      ? value
      : parseFloat(String(value).replace(",", "."));
  return Number.isFinite(num) ? num.toFixed(2) : String(value);
}
const priceText = formatPrice(item.price);

// Para data-attributes
const dataTags = Array.isArray(item.tags) ? item.tags.join(",") : "";
---

<article
  class="card"
  data-title={String(item.title || "").toLowerCase()}
  data-tags={dataTags.toLowerCase()}
  data-price={String(item.price)}
>
  <a class="card-link" href={item.url} target="_blank" rel="noopener">
    <img src={imgSrc} alt={item.title} loading="lazy" />
    <h3>{item.title}</h3>
    <p class="price">{priceText}â‚¬</p>
  </a>

  {
    Array.isArray(item.tags) && item.tags.length > 0 && (
      <div class="tag-row">
        {(item.tags as string[]).map((t: string) => (
          <button type="button" class="chip" data-tag={t}>
            {t}
          </button>
        ))}
      </div>
    )
  }
</article>

<style>
  .card {
    border: 1px solid var(--border);
    border-radius: 16px;
    overflow: hidden;
    background: var(--card);
    transition:
      transform 0.2s ease,
      box-shadow 0.2s ease;
    margin: 1; /* el gap del grid gestiona el espacio */
  }
  .card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }

  .card img {
    width: 100%;
    height: auto;
    display: block;
  }

  /* sin subrayados y sin color visited */
  .card a,
  .card a:visited,
  .card a:hover,
  .card a:active {
    color: inherit;
    text-decoration: none;
  }

  .card h3 {
    margin: 10px 14px 6px;
    font-size: 15px;
    color: var(--text);
  }
  .card .price {
    margin: 0 14px 12px;
    font-size: 13px;
    color: var(--muted);
  }

  .card-link {
    display: block;
  }
  .card-link:focus-visible {
    outline: 2px solid var(--accent);
    outline-offset: 4px;
    border-radius: 12px;
  }

  /* TAGS pill */
  .tag-row {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    padding: 0 14px 14px;
  }
  .chip {
    --chip-bg: color-mix(in oklab, var(--card), var(--text) 10%);
    --chip-border: color-mix(in oklab, var(--border), var(--text) 14%);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid var(--chip-border);
    background: var(--chip-bg);
    color: var(--text);
    padding: 7px 12px;
    border-radius: 9999px;
    font-size: 12px;
    font-weight: 500;
    line-height: 1;
    cursor: pointer;
    box-shadow: var(--shadow-sm);
    transition:
      transform 0.15s ease,
      box-shadow 0.15s ease,
      background 0.18s ease,
      border-color 0.18s ease;
  }
  .chip:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
    background: color-mix(in oklab, var(--chip-bg), var(--accent) 12%);
    border-color: color-mix(in oklab, var(--chip-border), var(--accent) 35%);
  }
  .chip:focus-visible {
    outline: 2px solid var(--accent);
    outline-offset: 2px;
  }
  .chip.active {
    background: var(--accent);
    border-color: color-mix(in oklab, var(--accent), #000 20%);
    color: #0b1220;
    box-shadow: var(--shadow-md);
  }
</style>
